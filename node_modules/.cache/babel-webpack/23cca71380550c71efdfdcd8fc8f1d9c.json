{"ast":null,"code":"import _classCallCheck from \"/Users/kritsanaprasit/Desktop/ProjectCS/school-budget-system/SchoolBudgetSystem/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport { Directive, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, NgModule } from '@angular/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { MatCommonModule } from '@angular/material/core';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Content of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\n\nvar MatCardContent = function MatCardContent() {\n  _classCallCheck(this, MatCardContent);\n};\n\nMatCardContent.decorators = [{\n  type: Directive,\n  args: [{\n    selector: 'mat-card-content, [mat-card-content], [matCardContent]',\n    host: {\n      'class': 'mat-card-content'\n    }\n  }]\n}];\n/**\n * Title of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\n\nvar MatCardTitle = function MatCardTitle() {\n  _classCallCheck(this, MatCardTitle);\n};\n\nMatCardTitle.decorators = [{\n  type: Directive,\n  args: [{\n    selector: \"mat-card-title, [mat-card-title], [matCardTitle]\",\n    host: {\n      'class': 'mat-card-title'\n    }\n  }]\n}];\n/**\n * Sub-title of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\n\nvar MatCardSubtitle = function MatCardSubtitle() {\n  _classCallCheck(this, MatCardSubtitle);\n};\n\nMatCardSubtitle.decorators = [{\n  type: Directive,\n  args: [{\n    selector: \"mat-card-subtitle, [mat-card-subtitle], [matCardSubtitle]\",\n    host: {\n      'class': 'mat-card-subtitle'\n    }\n  }]\n}];\n/**\n * Action section of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\n\nvar MatCardActions = function MatCardActions() {\n  _classCallCheck(this, MatCardActions);\n\n  /** Position of the actions inside the card. */\n  this.align = 'start';\n};\n\nMatCardActions.decorators = [{\n  type: Directive,\n  args: [{\n    selector: 'mat-card-actions',\n    exportAs: 'matCardActions',\n    host: {\n      'class': 'mat-card-actions',\n      '[class.mat-card-actions-align-end]': 'align === \"end\"'\n    }\n  }]\n}];\nMatCardActions.propDecorators = {\n  align: [{\n    type: Input\n  }]\n};\n/**\n * Footer of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\n\nvar MatCardFooter = function MatCardFooter() {\n  _classCallCheck(this, MatCardFooter);\n};\n\nMatCardFooter.decorators = [{\n  type: Directive,\n  args: [{\n    selector: 'mat-card-footer',\n    host: {\n      'class': 'mat-card-footer'\n    }\n  }]\n}];\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\n\nvar MatCardImage = function MatCardImage() {\n  _classCallCheck(this, MatCardImage);\n};\n\nMatCardImage.decorators = [{\n  type: Directive,\n  args: [{\n    selector: '[mat-card-image], [matCardImage]',\n    host: {\n      'class': 'mat-card-image'\n    }\n  }]\n}];\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\n\nvar MatCardSmImage = function MatCardSmImage() {\n  _classCallCheck(this, MatCardSmImage);\n};\n\nMatCardSmImage.decorators = [{\n  type: Directive,\n  args: [{\n    selector: '[mat-card-sm-image], [matCardImageSmall]',\n    host: {\n      'class': 'mat-card-sm-image'\n    }\n  }]\n}];\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\n\nvar MatCardMdImage = function MatCardMdImage() {\n  _classCallCheck(this, MatCardMdImage);\n};\n\nMatCardMdImage.decorators = [{\n  type: Directive,\n  args: [{\n    selector: '[mat-card-md-image], [matCardImageMedium]',\n    host: {\n      'class': 'mat-card-md-image'\n    }\n  }]\n}];\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\n\nvar MatCardLgImage = function MatCardLgImage() {\n  _classCallCheck(this, MatCardLgImage);\n};\n\nMatCardLgImage.decorators = [{\n  type: Directive,\n  args: [{\n    selector: '[mat-card-lg-image], [matCardImageLarge]',\n    host: {\n      'class': 'mat-card-lg-image'\n    }\n  }]\n}];\n/**\n * Large image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\n\nvar MatCardXlImage = function MatCardXlImage() {\n  _classCallCheck(this, MatCardXlImage);\n};\n\nMatCardXlImage.decorators = [{\n  type: Directive,\n  args: [{\n    selector: '[mat-card-xl-image], [matCardImageXLarge]',\n    host: {\n      'class': 'mat-card-xl-image'\n    }\n  }]\n}];\n/**\n * Avatar image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\n\nvar MatCardAvatar = function MatCardAvatar() {\n  _classCallCheck(this, MatCardAvatar);\n};\n\nMatCardAvatar.decorators = [{\n  type: Directive,\n  args: [{\n    selector: '[mat-card-avatar], [matCardAvatar]',\n    host: {\n      'class': 'mat-card-avatar'\n    }\n  }]\n}];\n/**\n * A basic content container component that adds the styles of a Material design card.\n *\n * While this component can be used alone, it also provides a number\n * of preset styles for common card sections, including:\n * - mat-card-title\n * - mat-card-subtitle\n * - mat-card-content\n * - mat-card-actions\n * - mat-card-footer\n */\n\nvar MatCard = // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\nfunction MatCard(_animationMode) {\n  _classCallCheck(this, MatCard);\n\n  this._animationMode = _animationMode;\n};\n\nMatCard.decorators = [{\n  type: Component,\n  args: [{\n    selector: 'mat-card',\n    exportAs: 'matCard',\n    template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-card-footer\\\"></ng-content>\\n\",\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n      'class': 'mat-card mat-focus-indicator',\n      '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n    },\n    styles: [\".mat-card{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:block;position:relative;padding:16px;border-radius:4px}._mat-animation-noopable.mat-card{transition:none;animation:none}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}.cdk-high-contrast-active .mat-card{outline:solid 1px}.mat-card-actions,.mat-card-subtitle,.mat-card-content{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button,.mat-card-actions .mat-stroked-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media(max-width: 599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card>:first-child,.mat-card-content>:first-child{margin-top:0}.mat-card>:last-child:not(.mat-card-footer),.mat-card-content>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions .mat-button:first-child,.mat-card-actions .mat-raised-button:first-child,.mat-card-actions .mat-stroked-button:first-child{margin-left:0;margin-right:0}.mat-card-title:not(:first-child),.mat-card-subtitle:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\\n\"]\n  }]\n}];\n\nMatCard.ctorParameters = function () {\n  return [{\n    type: String,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ANIMATION_MODULE_TYPE]\n    }]\n  }];\n};\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a\n * preset header section (i.e. a title, subtitle, and avatar layout).\n * @docs-private\n */\n\n\nvar MatCardHeader = function MatCardHeader() {\n  _classCallCheck(this, MatCardHeader);\n};\n\nMatCardHeader.decorators = [{\n  type: Component,\n  args: [{\n    selector: 'mat-card-header',\n    template: \"<ng-content select=\\\"[mat-card-avatar], [matCardAvatar]\\\"></ng-content>\\n<div class=\\\"mat-card-header-text\\\">\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content></ng-content>\\n\",\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n      'class': 'mat-card-header'\n    }\n  }]\n}];\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a preset\n * layout that groups an image with a title section.\n * @docs-private\n */\n\nvar MatCardTitleGroup = function MatCardTitleGroup() {\n  _classCallCheck(this, MatCardTitleGroup);\n};\n\nMatCardTitleGroup.decorators = [{\n  type: Component,\n  args: [{\n    selector: 'mat-card-title-group',\n    template: \"<div>\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content select=\\\"img\\\"></ng-content>\\n<ng-content></ng-content>\\n\",\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n      'class': 'mat-card-title-group'\n    }\n  }]\n}];\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar MatCardModule = function MatCardModule() {\n  _classCallCheck(this, MatCardModule);\n};\n\nMatCardModule.decorators = [{\n  type: NgModule,\n  args: [{\n    imports: [MatCommonModule],\n    exports: [MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle, MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage, MatCardXlImage, MatCardAvatar, MatCommonModule],\n    declarations: [MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle, MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage, MatCardXlImage, MatCardAvatar]\n  }]\n}];\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatCard, MatCardActions, MatCardAvatar, MatCardContent, MatCardFooter, MatCardHeader, MatCardImage, MatCardLgImage, MatCardMdImage, MatCardModule, MatCardSmImage, MatCardSubtitle, MatCardTitle, MatCardTitleGroup, MatCardXlImage };","map":{"version":3,"sources":["../../../../../../src/material/card/card.ts","../../../../../../src/material/card/card-module.ts","../../../../../../src/material/card/public-api.ts","../../../../../../src/material/card/index.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Component,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  Directive,\n  Input,\n  Optional,\n  Inject,\n} from '@angular/core';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\n\n\n/**\n * Content of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\n@Directive({\n  selector: 'mat-card-content, [mat-card-content], [matCardContent]',\n  host: {'class': 'mat-card-content'}\n})\nexport class MatCardContent {}\n\n/**\n * Title of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\n@Directive({\n  selector: `mat-card-title, [mat-card-title], [matCardTitle]`,\n  host: {\n    'class': 'mat-card-title'\n  }\n})\nexport class MatCardTitle {}\n\n/**\n * Sub-title of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\n@Directive({\n  selector: `mat-card-subtitle, [mat-card-subtitle], [matCardSubtitle]`,\n  host: {\n    'class': 'mat-card-subtitle'\n  }\n})\nexport class MatCardSubtitle {}\n\n/**\n * Action section of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\n@Directive({\n  selector: 'mat-card-actions',\n  exportAs: 'matCardActions',\n  host: {\n    'class': 'mat-card-actions',\n    '[class.mat-card-actions-align-end]': 'align === \"end\"',\n  }\n})\nexport class MatCardActions {\n  /** Position of the actions inside the card. */\n  @Input() align: 'start' | 'end' = 'start';\n}\n\n/**\n * Footer of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\n@Directive({\n  selector: 'mat-card-footer',\n  host: {'class': 'mat-card-footer'}\n})\nexport class MatCardFooter {}\n\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\n@Directive({\n  selector: '[mat-card-image], [matCardImage]',\n  host: {'class': 'mat-card-image'}\n})\nexport class MatCardImage {}\n\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\n@Directive({\n  selector: '[mat-card-sm-image], [matCardImageSmall]',\n  host: {'class': 'mat-card-sm-image'}\n})\nexport class MatCardSmImage {}\n\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\n@Directive({\n  selector: '[mat-card-md-image], [matCardImageMedium]',\n  host: {'class': 'mat-card-md-image'}\n})\nexport class MatCardMdImage {}\n\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\n@Directive({\n  selector: '[mat-card-lg-image], [matCardImageLarge]',\n  host: {'class': 'mat-card-lg-image'}\n})\nexport class MatCardLgImage {}\n\n/**\n * Large image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\n@Directive({\n  selector: '[mat-card-xl-image], [matCardImageXLarge]',\n  host: {'class': 'mat-card-xl-image'}\n})\nexport class MatCardXlImage {}\n\n/**\n * Avatar image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\n@Directive({\n  selector: '[mat-card-avatar], [matCardAvatar]',\n  host: {'class': 'mat-card-avatar'}\n})\nexport class MatCardAvatar {}\n\n\n/**\n * A basic content container component that adds the styles of a Material design card.\n *\n * While this component can be used alone, it also provides a number\n * of preset styles for common card sections, including:\n * - mat-card-title\n * - mat-card-subtitle\n * - mat-card-content\n * - mat-card-actions\n * - mat-card-footer\n */\n@Component({\n  selector: 'mat-card',\n  exportAs: 'matCard',\n  templateUrl: 'card.html',\n  styleUrls: ['card.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    'class': 'mat-card mat-focus-indicator',\n    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n  }\n})\nexport class MatCard {\n  // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n  constructor(@Optional() @Inject(ANIMATION_MODULE_TYPE) public _animationMode?: string) {}\n}\n\n\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a\n * preset header section (i.e. a title, subtitle, and avatar layout).\n * @docs-private\n */\n@Component({\n  selector: 'mat-card-header',\n  templateUrl: 'card-header.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {'class': 'mat-card-header'}\n})\nexport class MatCardHeader {}\n\n\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a preset\n * layout that groups an image with a title section.\n * @docs-private\n */\n@Component({\n  selector: 'mat-card-title-group',\n  templateUrl: 'card-title-group.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {'class': 'mat-card-title-group'}\n})\nexport class MatCardTitleGroup {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule} from '@angular/material/core';\nimport {\n  MatCard,\n  MatCardActions,\n  MatCardAvatar,\n  MatCardContent,\n  MatCardFooter,\n  MatCardHeader,\n  MatCardImage,\n  MatCardLgImage,\n  MatCardMdImage,\n  MatCardSmImage,\n  MatCardSubtitle,\n  MatCardTitle,\n  MatCardTitleGroup,\n  MatCardXlImage,\n} from './card';\n\n\n@NgModule({\n  imports: [MatCommonModule],\n  exports: [\n    MatCard,\n    MatCardHeader,\n    MatCardTitleGroup,\n    MatCardContent,\n    MatCardTitle,\n    MatCardSubtitle,\n    MatCardActions,\n    MatCardFooter,\n    MatCardSmImage,\n    MatCardMdImage,\n    MatCardLgImage,\n    MatCardImage,\n    MatCardXlImage,\n    MatCardAvatar,\n    MatCommonModule,\n  ],\n  declarations: [\n    MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle,\n    MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage,\n    MatCardXlImage, MatCardAvatar,\n  ],\n})\nexport class MatCardModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './card';\nexport * from './card-module';\n\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]},"metadata":{},"sourceType":"module"}