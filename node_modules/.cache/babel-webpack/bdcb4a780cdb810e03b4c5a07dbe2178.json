{"ast":null,"code":"import _classCallCheck from \"/Users/kritsanaprasit/Desktop/ProjectCS/school-budget-system/SchoolBudgetSystem/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kritsanaprasit/Desktop/ProjectCS/school-budget-system/SchoolBudgetSystem/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { MatCommonModule } from '@angular/material/core';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar MatDivider = /*#__PURE__*/function () {\n  function MatDivider() {\n    _classCallCheck(this, MatDivider);\n\n    this._vertical = false;\n    this._inset = false;\n  }\n  /** Whether the divider is vertically aligned. */\n\n\n  _createClass(MatDivider, [{\n    key: \"vertical\",\n    get: function get() {\n      return this._vertical;\n    },\n    set: function set(value) {\n      this._vertical = coerceBooleanProperty(value);\n    }\n    /** Whether the divider is an inset divider. */\n\n  }, {\n    key: \"inset\",\n    get: function get() {\n      return this._inset;\n    },\n    set: function set(value) {\n      this._inset = coerceBooleanProperty(value);\n    }\n  }]);\n\n  return MatDivider;\n}();\n\nMatDivider.decorators = [{\n  type: Component,\n  args: [{\n    selector: 'mat-divider',\n    host: {\n      'role': 'separator',\n      '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n      '[class.mat-divider-vertical]': 'vertical',\n      '[class.mat-divider-horizontal]': '!vertical',\n      '[class.mat-divider-inset]': 'inset',\n      'class': 'mat-divider'\n    },\n    template: '',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    styles: [\".mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\\n\"]\n  }]\n}];\nMatDivider.propDecorators = {\n  vertical: [{\n    type: Input\n  }],\n  inset: [{\n    type: Input\n  }]\n};\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar MatDividerModule = function MatDividerModule() {\n  _classCallCheck(this, MatDividerModule);\n};\n\nMatDividerModule.decorators = [{\n  type: NgModule,\n  args: [{\n    imports: [MatCommonModule],\n    exports: [MatDivider, MatCommonModule],\n    declarations: [MatDivider]\n  }]\n}];\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatDivider, MatDividerModule };","map":{"version":3,"sources":["../../../../../../src/material/divider/divider.ts","../../../../../../src/material/divider/divider-module.ts","../../../../../../src/material/divider/public-api.ts","../../../../../../src/material/divider/index.ts"],"names":[],"mappings":";;;;;AAAA;;;;;;;;IA0Ba,U;AAfb,wBAAA;AAAA;;AAoBU,SAAA,SAAA,GAAqB,KAArB;AAMA,SAAA,MAAA,GAAkB,KAAlB;AAIT;;;;;;wBAZa;AAAc,aAAO,KAAK,SAAZ;AAAwB,K;sBACrC,K,EAAc;AAAI,WAAK,SAAL,GAAiB,qBAAqB,CAAC,KAAD,CAAtC;AAAgD;;;;;wBAKtE;AAAc,aAAO,KAAK,MAAZ;AAAqB,K;sBAClC,K,EAAc;AAAI,WAAK,MAAL,GAAc,qBAAqB,CAAC,KAAD,CAAnC;AAA6C;;;;;;;QAzB1E,S;AAAS,EAAA,IAAA,EAAA,CAAC;AACT,IAAA,QAAQ,EAAE,aADD;AAET,IAAA,IAAI,EAAE;AACJ,cAAQ,WADJ;AAEJ,iCAA2B,sCAFvB;AAGJ,sCAAgC,UAH5B;AAIJ,wCAAkC,WAJ9B;AAKJ,mCAA6B,OALzB;AAMJ,eAAS;AANL,KAFG;AAUT,IAAA,QAAQ,EAAE,EAVD;AAYT,IAAA,aAAa,EAAE,iBAAiB,CAAC,IAZxB;AAaT,IAAA,eAAe,EAAE,uBAAuB,CAAC,MAbhC;;AAAA,GAAD;;;;UAiBP;;;UAMA;;;AClCH;;;;;;;;IAkBa,gB;;;;;QALZ,Q;AAAQ,EAAA,IAAA,EAAA,CAAC;AACR,IAAA,OAAO,EAAE,CAAC,eAAD,CADD;AAER,IAAA,OAAO,EAAE,CAAC,UAAD,EAAa,eAAb,CAFD;AAGR,IAAA,YAAY,EAAE,CAAC,UAAD;AAHN,GAAD;;ACbT;;;;;;;;ACAA","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChangeDetectionStrategy, Component, Input, ViewEncapsulation} from '@angular/core';\nimport {BooleanInput, coerceBooleanProperty} from '@angular/cdk/coercion';\n\n@Component({\n  selector: 'mat-divider',\n  host: {\n    'role': 'separator',\n    '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n    '[class.mat-divider-vertical]': 'vertical',\n    '[class.mat-divider-horizontal]': '!vertical',\n    '[class.mat-divider-inset]': 'inset',\n    'class': 'mat-divider'\n  },\n  template: '',\n  styleUrls: ['divider.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatDivider {\n  /** Whether the divider is vertically aligned. */\n  @Input()\n  get vertical(): boolean { return this._vertical; }\n  set vertical(value: boolean) { this._vertical = coerceBooleanProperty(value); }\n  private _vertical: boolean = false;\n\n  /** Whether the divider is an inset divider. */\n  @Input()\n  get inset(): boolean { return this._inset; }\n  set inset(value: boolean) { this._inset = coerceBooleanProperty(value); }\n  private _inset: boolean = false;\n\n  static ngAcceptInputType_vertical: BooleanInput;\n  static ngAcceptInputType_inset: BooleanInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule} from '@angular/material/core';\nimport {MatDivider} from './divider';\n\n\n@NgModule({\n  imports: [MatCommonModule],\n  exports: [MatDivider, MatCommonModule],\n  declarations: [MatDivider],\n})\nexport class MatDividerModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './divider';\nexport * from './divider-module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]},"metadata":{},"sourceType":"module"}