{"ast":null,"code":"import _classCallCheck from \"/Users/kritsanaprasit/Desktop/ProjectCS/school-budget-system/SchoolBudgetSystem/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kritsanaprasit/Desktop/ProjectCS/school-budget-system/SchoolBudgetSystem/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { EventEmitter, Directive, Output, Input, ContentChildren, Component, forwardRef, NgZone, ViewChild, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n/**\n * CKGroup component\n * Usage :\n *  <ckeditor [(ngModel)]=\"data\" [config]=\"{...}\" debounce=\"500\">\n *      <ckbutton [name]=\"'SaveButton'\" [command]=\"'saveCommand'\" (click)=\"save($event)\"\n *                [icon]=\"'/save.png'\" [toolbar]=\"'customGroup,1'\" [label]=\"'Save'\">\n *      </ckbutton>\n *   </ckeditor>\n */\n\nimport * as ɵngcc0 from '@angular/core';\nvar _c0 = [\"host\"];\n\nvar CKButtonDirective = /*#__PURE__*/function () {\n  function CKButtonDirective() {\n    _classCallCheck(this, CKButtonDirective);\n\n    this.click = new EventEmitter();\n  }\n\n  _createClass(CKButtonDirective, [{\n    key: \"initialize\",\n    value: function initialize(editor) {\n      var _this = this;\n\n      editor.instance.addCommand(this.command, {\n        exec: function exec(evt) {\n          _this.click.emit(evt);\n        }\n      });\n      editor.instance.ui.addButton(this.name, {\n        label: this.label,\n        command: this.command,\n        toolbar: this.toolbar,\n        icon: this.icon\n      });\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      if (!this.name) throw new Error('Attribute \"name\" is required on <ckbutton>');\n      if (!this.command) throw new Error('Attribute \"command\" is required on <ckbutton>');\n    }\n  }]);\n\n  return CKButtonDirective;\n}();\n\nCKButtonDirective.ɵfac = function CKButtonDirective_Factory(t) {\n  return new (t || CKButtonDirective)();\n};\n\nCKButtonDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: CKButtonDirective,\n  selectors: [[\"ckbutton\"]],\n  inputs: {\n    label: \"label\",\n    command: \"command\",\n    toolbar: \"toolbar\",\n    name: \"name\",\n    icon: \"icon\"\n  },\n  outputs: {\n    click: \"click\"\n  }\n});\nCKButtonDirective.propDecorators = {\n  click: [{\n    type: Output\n  }],\n  label: [{\n    type: Input\n  }],\n  command: [{\n    type: Input\n  }],\n  toolbar: [{\n    type: Input\n  }],\n  name: [{\n    type: Input\n  }],\n  icon: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(CKButtonDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'ckbutton'\n    }]\n  }], function () {\n    return [];\n  }, {\n    click: [{\n      type: Output\n    }],\n    label: [{\n      type: Input\n    }],\n    command: [{\n      type: Input\n    }],\n    toolbar: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }],\n    icon: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * CKGroup component\n * Usage :\n *  <ckeditor [(ngModel)]=\"data\" [config]=\"{...}\" debounce=\"500\">\n *      <ckgroup [name]=\"'exampleGroup2'\" [previous]=\"'1'\" [subgroupOf]=\"'exampleGroup1'\">\n *          .\n *          .\n *      </ckgroup>\n *   </ckeditor>\n */\n\n\nvar CKGroupDirective = /*#__PURE__*/function () {\n  function CKGroupDirective() {\n    _classCallCheck(this, CKGroupDirective);\n  }\n\n  _createClass(CKGroupDirective, [{\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      var _this2 = this;\n\n      // Reconfigure each button's toolbar property within ckgroup to hold its parent's name\n      this.toolbarButtons.forEach(function (button) {\n        return button.toolbar = _this2.name;\n      });\n    }\n  }, {\n    key: \"initialize\",\n    value: function initialize(editor) {\n      editor.instance.ui.addToolbarGroup(this.name, this.previous, this.subgroupOf); // Initialize each button within ckgroup\n\n      this.toolbarButtons.forEach(function (button) {\n        button.initialize(editor);\n      });\n    }\n  }]);\n\n  return CKGroupDirective;\n}();\n\nCKGroupDirective.ɵfac = function CKGroupDirective_Factory(t) {\n  return new (t || CKGroupDirective)();\n};\n\nCKGroupDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: CKGroupDirective,\n  selectors: [[\"ckgroup\"]],\n  contentQueries: function CKGroupDirective_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, CKButtonDirective, false);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.toolbarButtons = _t);\n    }\n  },\n  inputs: {\n    name: \"name\",\n    previous: \"previous\",\n    subgroupOf: \"subgroupOf\"\n  }\n});\nCKGroupDirective.propDecorators = {\n  name: [{\n    type: Input\n  }],\n  previous: [{\n    type: Input\n  }],\n  subgroupOf: [{\n    type: Input\n  }],\n  toolbarButtons: [{\n    type: ContentChildren,\n    args: [CKButtonDirective]\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(CKGroupDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'ckgroup'\n    }]\n  }], null, {\n    name: [{\n      type: Input\n    }],\n    previous: [{\n      type: Input\n    }],\n    subgroupOf: [{\n      type: Input\n    }],\n    toolbarButtons: [{\n      type: ContentChildren,\n      args: [CKButtonDirective]\n    }]\n  });\n})(); // Imports\n\n/**\n * CKEditor component\n * Usage :\n *  <ckeditor [(ngModel)]=\"data\" [config]=\"{...}\" debounce=\"500\"></ckeditor>\n */\n\n\nvar CKEditorComponent = /*#__PURE__*/function () {\n  /**\n   * Constructor\n   */\n  function CKEditorComponent(zone) {\n    _classCallCheck(this, CKEditorComponent);\n\n    this.zone = zone;\n    this.change = new EventEmitter();\n    this.editorChange = new EventEmitter();\n    this.ready = new EventEmitter();\n    this.blur = new EventEmitter();\n    this.focus = new EventEmitter();\n    this.contentDom = new EventEmitter();\n    this.fileUploadRequest = new EventEmitter();\n    this.fileUploadResponse = new EventEmitter();\n    this.paste = new EventEmitter();\n    this.drop = new EventEmitter();\n    this._value = '';\n    this.destroyed = false;\n  }\n\n  _createClass(CKEditorComponent, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (changes.readonly && this.instance) {\n        this.instance.setReadOnly(changes.readonly.currentValue);\n      }\n    }\n    /**\n     * On component destroy\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      var _this3 = this;\n\n      this.destroyed = true;\n      this.zone.runOutsideAngular(function () {\n        if (_this3.instance) {\n          CKEDITOR.removeAllListeners();\n\n          _this3.instance.destroy();\n\n          _this3.instance = null;\n        }\n      });\n    }\n    /**\n     * On component view init\n     */\n\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      if (this.destroyed) {\n        return;\n      }\n\n      this.ckeditorInit(this.config || {});\n    }\n    /**\n     * On component view checked\n     */\n\n  }, {\n    key: \"ngAfterViewChecked\",\n    value: function ngAfterViewChecked() {\n      this.ckeditorInit(this.config || {});\n    }\n    /**\n     * Value update process\n     */\n\n  }, {\n    key: \"updateValue\",\n    value: function updateValue(value) {\n      var _this4 = this;\n\n      this.zone.run(function () {\n        _this4.value = value;\n\n        _this4.onChange(value);\n\n        _this4.onTouched();\n\n        _this4.change.emit(value);\n      });\n    }\n    /**\n     * CKEditor init\n     */\n\n  }, {\n    key: \"ckeditorInit\",\n    value: function ckeditorInit(config) {\n      var _this5 = this;\n\n      if (typeof CKEDITOR === 'undefined') {\n        console.warn('CKEditor 4.x is missing (http://ckeditor.com/)');\n      } else {\n        // Check textarea exists\n        if (this.instance || !this.documentContains(this.host.nativeElement)) {\n          return;\n        }\n\n        if (this.readonly) {\n          config.readOnly = this.readonly;\n        } // CKEditor replace textarea\n\n\n        this.instance = CKEDITOR.replace(this.host.nativeElement, config); // Set initial value\n\n        this.instance.setData(this.value); // listen for instanceReady event\n\n        this.instance.on('instanceReady', function (evt) {\n          // if value has changed while instance loading\n          // update instance with current component value\n          if (_this5.instance.getData() !== _this5.value) {\n            _this5.instance.setData(_this5.value);\n          } // send the evt to the EventEmitter\n\n\n          _this5.ready.emit(evt);\n        }); // CKEditor change event\n\n        this.instance.on('change', function (evt) {\n          _this5.onTouched();\n\n          var value = _this5.instance.getData();\n\n          if (_this5.value !== value) {\n            // Debounce update\n            if (_this5.debounce) {\n              if (_this5.debounceTimeout) clearTimeout(_this5.debounceTimeout);\n              _this5.debounceTimeout = setTimeout(function () {\n                _this5.updateValue(value);\n\n                _this5.debounceTimeout = null;\n              }, parseInt(_this5.debounce)); // Live update\n            } else {\n              _this5.updateValue(value);\n            }\n          } // Original ckeditor event dispatch\n\n\n          _this5.editorChange.emit(evt);\n        }); // CKEditor blur event\n\n        this.instance.on('blur', function (evt) {\n          _this5.blur.emit(evt);\n        }); // CKEditor focus event\n\n        this.instance.on('focus', function (evt) {\n          _this5.focus.emit(evt);\n        }); // CKEditor contentDom event\n\n        this.instance.on('contentDom', function (evt) {\n          _this5.contentDom.emit(evt);\n        }); // CKEditor fileUploadRequest event\n\n        this.instance.on('fileUploadRequest', function (evt) {\n          _this5.fileUploadRequest.emit(evt);\n        }); // CKEditor fileUploadResponse event\n\n        this.instance.on('fileUploadResponse', function (evt) {\n          _this5.fileUploadResponse.emit(evt);\n        }); // CKEditor paste event\n\n        this.instance.on('paste', function (evt) {\n          _this5.paste.emit(evt);\n        }); // CKEditor drop event\n\n        this.instance.on('drop', function (evt) {\n          _this5.drop.emit(evt);\n        }); // Add Toolbar Groups to Editor. This will also add Buttons within groups.\n\n        this.toolbarGroups.forEach(function (group) {\n          group.initialize(_this5);\n        }); // Add Toolbar Buttons to Editor.\n\n        this.toolbarButtons.forEach(function (button) {\n          button.initialize(_this5);\n        });\n      }\n    }\n    /**\n     * Implements ControlValueAccessor\n     */\n\n  }, {\n    key: \"writeValue\",\n    value: function writeValue(value) {\n      this._value = value;\n      if (this.instance) this.instance.setData(value);\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(_) {}\n  }, {\n    key: \"onTouched\",\n    value: function onTouched() {}\n  }, {\n    key: \"registerOnChange\",\n    value: function registerOnChange(fn) {\n      this.onChange = fn;\n    }\n  }, {\n    key: \"registerOnTouched\",\n    value: function registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n  }, {\n    key: \"documentContains\",\n    value: function documentContains(node) {\n      return document.contains ? document.contains(node) : document.body.contains(node);\n    }\n  }, {\n    key: \"value\",\n    get: function get() {\n      return this._value;\n    },\n    set: function set(v) {\n      if (v !== this._value) {\n        this._value = v;\n        this.onChange(v);\n      }\n    }\n  }]);\n\n  return CKEditorComponent;\n}();\n\nCKEditorComponent.ɵfac = function CKEditorComponent_Factory(t) {\n  return new (t || CKEditorComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n};\n\nCKEditorComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: CKEditorComponent,\n  selectors: [[\"ckeditor\"]],\n  contentQueries: function CKEditorComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, CKButtonDirective, false);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, CKGroupDirective, false);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.toolbarButtons = _t);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.toolbarGroups = _t);\n    }\n  },\n  viewQuery: function CKEditorComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c0, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.host = _t.first);\n    }\n  },\n  inputs: {\n    value: \"value\",\n    config: \"config\",\n    readonly: \"readonly\",\n    debounce: \"debounce\"\n  },\n  outputs: {\n    change: \"change\",\n    editorChange: \"editorChange\",\n    ready: \"ready\",\n    blur: \"blur\",\n    focus: \"focus\",\n    contentDom: \"contentDom\",\n    fileUploadRequest: \"fileUploadRequest\",\n    fileUploadResponse: \"fileUploadResponse\",\n    paste: \"paste\",\n    drop: \"drop\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () {\n      return CKEditorComponent;\n    }),\n    multi: true\n  }]), ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 2,\n  vars: 0,\n  consts: [[\"host\", \"\"]],\n  template: function CKEditorComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelement(0, \"textarea\", null, 0);\n    }\n  },\n  encapsulation: 2\n});\n\nCKEditorComponent.ctorParameters = function () {\n  return [{\n    type: NgZone\n  }];\n};\n\nCKEditorComponent.propDecorators = {\n  config: [{\n    type: Input\n  }],\n  readonly: [{\n    type: Input\n  }],\n  debounce: [{\n    type: Input\n  }],\n  change: [{\n    type: Output\n  }],\n  editorChange: [{\n    type: Output\n  }],\n  ready: [{\n    type: Output\n  }],\n  blur: [{\n    type: Output\n  }],\n  focus: [{\n    type: Output\n  }],\n  contentDom: [{\n    type: Output\n  }],\n  fileUploadRequest: [{\n    type: Output\n  }],\n  fileUploadResponse: [{\n    type: Output\n  }],\n  paste: [{\n    type: Output\n  }],\n  drop: [{\n    type: Output\n  }],\n  host: [{\n    type: ViewChild,\n    args: ['host', {\n      static: false\n    }]\n  }],\n  toolbarButtons: [{\n    type: ContentChildren,\n    args: [CKButtonDirective]\n  }],\n  toolbarGroups: [{\n    type: ContentChildren,\n    args: [CKGroupDirective]\n  }],\n  value: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(CKEditorComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ckeditor',\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(function () {\n          return CKEditorComponent;\n        }),\n        multi: true\n      }],\n      template: \"<textarea #host></textarea>\"\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.NgZone\n    }];\n  }, {\n    change: [{\n      type: Output\n    }],\n    editorChange: [{\n      type: Output\n    }],\n    ready: [{\n      type: Output\n    }],\n    blur: [{\n      type: Output\n    }],\n    focus: [{\n      type: Output\n    }],\n    contentDom: [{\n      type: Output\n    }],\n    fileUploadRequest: [{\n      type: Output\n    }],\n    fileUploadResponse: [{\n      type: Output\n    }],\n    paste: [{\n      type: Output\n    }],\n    drop: [{\n      type: Output\n    }],\n    value: [{\n      type: Input\n    }],\n    config: [{\n      type: Input\n    }],\n    readonly: [{\n      type: Input\n    }],\n    debounce: [{\n      type: Input\n    }],\n    host: [{\n      type: ViewChild,\n      args: ['host', {\n        static: false\n      }]\n    }],\n    toolbarButtons: [{\n      type: ContentChildren,\n      args: [CKButtonDirective]\n    }],\n    toolbarGroups: [{\n      type: ContentChildren,\n      args: [CKGroupDirective]\n    }]\n  });\n})();\n/**\n * CKEditorModule\n */\n\n\nvar CKEditorModule = function CKEditorModule() {\n  _classCallCheck(this, CKEditorModule);\n};\n\nCKEditorModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: CKEditorModule\n});\nCKEditorModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function CKEditorModule_Factory(t) {\n    return new (t || CKEditorModule)();\n  },\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CKEditorModule, {\n    declarations: function declarations() {\n      return [CKEditorComponent, CKButtonDirective, CKGroupDirective];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [CKEditorComponent, CKButtonDirective, CKGroupDirective];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(CKEditorModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [CKEditorComponent, CKButtonDirective, CKGroupDirective],\n      exports: [CKEditorComponent, CKButtonDirective, CKGroupDirective]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { CKEditorModule, CKEditorComponent as ɵa, CKButtonDirective as ɵb, CKGroupDirective as ɵc };","map":{"version":3,"sources":["../../src/ckbutton.directive.ts","../../src/ckgroup.directive.ts","../../src/ckeditor.component.ts","../../src/ckeditor.module.ts","../../src/ng2-ckeditor.ts"],"names":[],"mappings":"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","sourcesContent":["import { Directive, OnInit, EventEmitter, Output, Input } from '@angular/core';\nimport { CKEditorComponent } from './ckeditor.component';\n\n/**\n * CKGroup component\n * Usage :\n *  <ckeditor [(ngModel)]=\"data\" [config]=\"{...}\" debounce=\"500\">\n *      <ckbutton [name]=\"'SaveButton'\" [command]=\"'saveCommand'\" (click)=\"save($event)\"\n *                [icon]=\"'/save.png'\" [toolbar]=\"'customGroup,1'\" [label]=\"'Save'\">\n *      </ckbutton>\n *   </ckeditor>\n */\n@Directive({\n  selector: 'ckbutton',\n})\nexport class CKButtonDirective implements OnInit {\n  @Output() click = new EventEmitter();\n  @Input() label: string;\n  @Input() command: string;\n  @Input() toolbar: string;\n  @Input() name: string;\n  @Input() icon: string;\n\n  initialize(editor: CKEditorComponent) {\n    editor.instance.addCommand(this.command, {\n      exec: (evt: any) => {\n        this.click.emit(evt);\n      },\n    });\n\n    editor.instance.ui.addButton(this.name, {\n      label: this.label,\n      command: this.command,\n      toolbar: this.toolbar,\n      icon: this.icon,\n    });\n  }\n\n  ngOnInit(): void {\n    if (!this.name) throw new Error('Attribute \"name\" is required on <ckbutton>');\n    if (!this.command) throw new Error('Attribute \"command\" is required on <ckbutton>');\n  }\n}\n","import { Directive, Input, AfterContentInit, ContentChildren, QueryList } from '@angular/core';\nimport { CKEditorComponent } from './ckeditor.component';\nimport { CKButtonDirective } from './ckbutton.directive';\n\n/**\n * CKGroup component\n * Usage :\n *  <ckeditor [(ngModel)]=\"data\" [config]=\"{...}\" debounce=\"500\">\n *      <ckgroup [name]=\"'exampleGroup2'\" [previous]=\"'1'\" [subgroupOf]=\"'exampleGroup1'\">\n *          .\n *          .\n *      </ckgroup>\n *   </ckeditor>\n */\n@Directive({\n  selector: 'ckgroup',\n})\nexport class CKGroupDirective implements AfterContentInit {\n  @Input() name: string;\n  @Input() previous: any;\n  @Input() subgroupOf: string;\n  @ContentChildren(CKButtonDirective) toolbarButtons: QueryList<CKButtonDirective>;\n\n  ngAfterContentInit() {\n    // Reconfigure each button's toolbar property within ckgroup to hold its parent's name\n    this.toolbarButtons.forEach((button) => (button.toolbar = this.name));\n  }\n\n  public initialize(editor: CKEditorComponent) {\n    editor.instance.ui.addToolbarGroup(this.name, this.previous, this.subgroupOf);\n    // Initialize each button within ckgroup\n    this.toolbarButtons.forEach((button) => {\n      button.initialize(editor);\n    });\n  }\n}\n","// Imports\nimport {\n  Component,\n  Input,\n  Output,\n  ViewChild,\n  EventEmitter,\n  NgZone,\n  forwardRef,\n  QueryList,\n  AfterViewInit,\n  ContentChildren,\n  SimpleChanges,\n  OnChanges,\n  OnDestroy\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { CKButtonDirective } from './ckbutton.directive';\nimport { CKGroupDirective } from './ckgroup.directive';\n\ndeclare var CKEDITOR: any;\n\n/**\n * CKEditor component\n * Usage :\n *  <ckeditor [(ngModel)]=\"data\" [config]=\"{...}\" debounce=\"500\"></ckeditor>\n */\n@Component({\n  selector: 'ckeditor',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => CKEditorComponent),\n      multi: true,\n    },\n  ],\n  template: `<textarea #host></textarea>`,\n})\nexport class CKEditorComponent implements OnChanges, AfterViewInit, OnDestroy {\n  @Input() config: any;\n  @Input() readonly: boolean;\n  @Input() debounce: string;\n\n  @Output() change = new EventEmitter();\n  @Output() editorChange = new EventEmitter();\n  @Output() ready = new EventEmitter();\n  @Output() blur = new EventEmitter();\n  @Output() focus = new EventEmitter();\n  @Output() contentDom = new EventEmitter();\n  @Output() fileUploadRequest = new EventEmitter();\n  @Output() fileUploadResponse = new EventEmitter();\n  @Output() paste = new EventEmitter();\n  @Output() drop = new EventEmitter();\n\n  @ViewChild('host', { static: false }) host: any;\n\n  @ContentChildren(CKButtonDirective) toolbarButtons: QueryList<CKButtonDirective>;\n  @ContentChildren(CKGroupDirective) toolbarGroups: QueryList<CKGroupDirective>;\n\n  _value = '';\n  instance: any;\n  debounceTimeout: any;\n  private destroyed = false;\n\n  /**\n   * Constructor\n   */\n  constructor(private zone: NgZone) {}\n\n  get value(): any {\n    return this._value;\n  }\n  @Input()\n  set value(v) {\n    if (v !== this._value) {\n      this._value = v;\n      this.onChange(v);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.readonly && this.instance) {\n      this.instance.setReadOnly(changes.readonly.currentValue);\n    }\n  }\n\n  /**\n   * On component destroy\n   */\n  ngOnDestroy() {\n    this.destroyed = true;\n    this.zone.runOutsideAngular( () => {\n      if (this.instance) {\n        CKEDITOR.removeAllListeners();\n        this.instance.destroy();\n        this.instance = null;\n      }\n    });\n  }\n\n  /**\n   * On component view init\n   */\n  ngAfterViewInit() {\n    if (this.destroyed) {\n      return;\n    }\n    this.ckeditorInit(this.config || {});\n  }\n\n  /**\n   * On component view checked\n   */\n  ngAfterViewChecked() {\n    this.ckeditorInit(this.config || {});\n  }\n\n  /**\n   * Value update process\n   */\n  updateValue(value: any) {\n    this.zone.run(() => {\n      this.value = value;\n\n      this.onChange(value);\n\n      this.onTouched();\n      this.change.emit(value);\n    });\n  }\n\n  /**\n   * CKEditor init\n   */\n  ckeditorInit(config: any) {\n    if (typeof CKEDITOR === 'undefined') {\n      console.warn('CKEditor 4.x is missing (http://ckeditor.com/)');\n    } else {\n      // Check textarea exists\n      if (this.instance || !this.documentContains(this.host.nativeElement)) {\n        return;\n      }\n\n      if (this.readonly) {\n        config.readOnly = this.readonly;\n      }\n      // CKEditor replace textarea\n      this.instance = CKEDITOR.replace(this.host.nativeElement, config);\n\n      // Set initial value\n      this.instance.setData(this.value);\n\n      // listen for instanceReady event\n      this.instance.on('instanceReady', (evt: any) => {\n        // if value has changed while instance loading\n        // update instance with current component value\n        if (this.instance.getData() !== this.value) {\n          this.instance.setData(this.value);\n        }\n\n        // send the evt to the EventEmitter\n        this.ready.emit(evt);\n      });\n\n      // CKEditor change event\n      this.instance.on('change', (evt: any) => {\n        this.onTouched();\n        let value = this.instance.getData();\n\n        if (this.value !== value) {\n          // Debounce update\n          if (this.debounce) {\n            if (this.debounceTimeout) clearTimeout(this.debounceTimeout);\n            this.debounceTimeout = setTimeout(() => {\n              this.updateValue(value);\n              this.debounceTimeout = null;\n            }, parseInt(this.debounce));\n\n            // Live update\n          } else {\n            this.updateValue(value);\n          }\n        }\n\n        // Original ckeditor event dispatch\n        this.editorChange.emit(evt);\n      });\n\n      // CKEditor blur event\n      this.instance.on('blur', (evt: any) => {\n        this.blur.emit(evt);\n      });\n\n      // CKEditor focus event\n      this.instance.on('focus', (evt: any) => {\n        this.focus.emit(evt);\n      });\n\n      // CKEditor contentDom event\n      this.instance.on('contentDom', (evt: any) => {\n        this.contentDom.emit(evt);\n      });\n\n      // CKEditor fileUploadRequest event\n      this.instance.on('fileUploadRequest', (evt: any) => {\n        this.fileUploadRequest.emit(evt);\n      });\n\n      // CKEditor fileUploadResponse event\n      this.instance.on('fileUploadResponse', (evt: any) => {\n        this.fileUploadResponse.emit(evt);\n      });\n\n      // CKEditor paste event\n      this.instance.on('paste', (evt: any) => {\n        this.paste.emit(evt);\n      });\n\n      // CKEditor drop event\n      this.instance.on('drop', (evt: any) => {\n        this.drop.emit(evt);\n      });\n\n      // Add Toolbar Groups to Editor. This will also add Buttons within groups.\n      this.toolbarGroups.forEach((group) => {\n        group.initialize(this);\n      });\n      // Add Toolbar Buttons to Editor.\n      this.toolbarButtons.forEach((button) => {\n        button.initialize(this);\n      });\n    }\n  }\n\n  /**\n   * Implements ControlValueAccessor\n   */\n  writeValue(value: any) {\n    this._value = value;\n    if (this.instance) this.instance.setData(value);\n  }\n  onChange(_: any) {}\n  onTouched() {}\n  registerOnChange(fn: any) {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n\n  private documentContains(node: Node) {\n    return document.contains ? document.contains(node) : document.body.contains(node);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CKEditorComponent } from './ckeditor.component';\nimport { CKButtonDirective } from './ckbutton.directive';\nimport { CKGroupDirective } from './ckgroup.directive';\n\n/**\n * CKEditorModule\n */\n@NgModule({\n  imports: [CommonModule],\n  declarations: [CKEditorComponent, CKButtonDirective, CKGroupDirective],\n  exports: [CKEditorComponent, CKButtonDirective, CKGroupDirective],\n})\nexport class CKEditorModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {CKButtonDirective as ɵb} from './ckbutton.directive';\nexport {CKEditorComponent as ɵa} from './ckeditor.component';\nexport {CKGroupDirective as ɵc} from './ckgroup.directive';"]},"metadata":{},"sourceType":"module"}