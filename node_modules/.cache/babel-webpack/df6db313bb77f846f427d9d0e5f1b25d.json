{"ast":null,"code":"\"use strict\";\n\nvar core_1 = require('@angular/core');\n\nvar ChartComponent = function () {\n  function ChartComponent(elementRef, ngZone) {\n    this.elementRef = elementRef;\n    this.ngZone = ngZone;\n    this.clickCanvas = new core_1.EventEmitter();\n    this.clickDataset = new core_1.EventEmitter();\n    this.clickElements = new core_1.EventEmitter();\n    this.clickElement = new core_1.EventEmitter();\n  }\n\n  ChartComponent.prototype.ngOnInit = function () {\n    this.create();\n  };\n\n  ChartComponent.prototype.ngOnChanges = function (changes) {\n    var _this = this;\n\n    if (this.chart) {\n      if (changes['type'] || changes['options']) {\n        this.create();\n      } else if (changes['data']) {\n        var currentValue_1 = changes['data'].currentValue;\n        ['datasets', 'labels', 'xLabels', 'yLabels'].forEach(function (property) {\n          _this.chart.data[property] = currentValue_1[property];\n        });\n        this.chart.update();\n      }\n    }\n  };\n\n  ChartComponent.prototype.create = function () {\n    var _this = this;\n\n    this.ngZone.runOutsideAngular(function () {\n      if (_this.canvas) {\n        _this.elementRef.nativeElement.removeChild(_this.canvas);\n      }\n\n      _this.canvas = document.createElement('canvas');\n\n      _this.elementRef.nativeElement.appendChild(_this.canvas);\n\n      _this.chart = new Chart(_this.canvas, {\n        type: _this.type,\n        data: _this.data,\n        options: _this.options\n      });\n\n      _this.canvas.onclick = function (e) {\n        _this.ngZone.run(function () {\n          _this.clickCanvas.next(e);\n\n          if (_this.clickDataset.observers.length) {\n            _this.clickDataset.next(_this.chart.getDatasetAtEvent(e));\n          }\n\n          if (_this.clickElements.observers.length) {\n            _this.clickElements.next(_this.chart.getElementsAtEvent(e));\n          }\n\n          if (_this.clickElement.observers.length) {\n            _this.clickElement.next(_this.chart.getElementAtEvent(e));\n          }\n        });\n      };\n    });\n  };\n\n  ChartComponent.decorators = [{\n    type: core_1.Component,\n    args: [{\n      selector: 'chart',\n      template: '',\n      styles: [':host { display: block; }']\n    }]\n  }];\n\n  ChartComponent.ctorParameters = function () {\n    return [{\n      type: core_1.ElementRef\n    }, {\n      type: core_1.NgZone\n    }];\n  };\n\n  ChartComponent.propDecorators = {\n    'type': [{\n      type: core_1.Input\n    }],\n    'data': [{\n      type: core_1.Input\n    }],\n    'options': [{\n      type: core_1.Input\n    }],\n    'clickCanvas': [{\n      type: core_1.Output\n    }],\n    'clickDataset': [{\n      type: core_1.Output\n    }],\n    'clickElements': [{\n      type: core_1.Output\n    }],\n    'clickElement': [{\n      type: core_1.Output\n    }]\n  };\n  return ChartComponent;\n}();\n\nexports.ChartComponent = ChartComponent;","map":{"version":3,"sources":["../src/chart.component.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar core_1 = require('@angular/core');\nvar ChartComponent = (function () {\n    function ChartComponent(elementRef, ngZone) {\n        this.elementRef = elementRef;\n        this.ngZone = ngZone;\n        this.clickCanvas = new core_1.EventEmitter();\n        this.clickDataset = new core_1.EventEmitter();\n        this.clickElements = new core_1.EventEmitter();\n        this.clickElement = new core_1.EventEmitter();\n    }\n    ChartComponent.prototype.ngOnInit = function () {\n        this.create();\n    };\n    ChartComponent.prototype.ngOnChanges = function (changes) {\n        var _this = this;\n        if (this.chart) {\n            if (changes['type'] || changes['options']) {\n                this.create();\n            }\n            else if (changes['data']) {\n                var currentValue_1 = changes['data'].currentValue;\n                ['datasets', 'labels', 'xLabels', 'yLabels'].forEach(function (property) {\n                    _this.chart.data[property] = currentValue_1[property];\n                });\n                this.chart.update();\n            }\n        }\n    };\n    ChartComponent.prototype.create = function () {\n        var _this = this;\n        this.ngZone.runOutsideAngular(function () {\n            if (_this.canvas) {\n                _this.elementRef.nativeElement.removeChild(_this.canvas);\n            }\n            _this.canvas = document.createElement('canvas');\n            _this.elementRef.nativeElement.appendChild(_this.canvas);\n            _this.chart = new Chart(_this.canvas, {\n                type: _this.type,\n                data: _this.data,\n                options: _this.options\n            });\n            _this.canvas.onclick = function (e) {\n                _this.ngZone.run(function () {\n                    _this.clickCanvas.next(e);\n                    if (_this.clickDataset.observers.length) {\n                        _this.clickDataset.next(_this.chart.getDatasetAtEvent(e));\n                    }\n                    if (_this.clickElements.observers.length) {\n                        _this.clickElements.next(_this.chart.getElementsAtEvent(e));\n                    }\n                    if (_this.clickElement.observers.length) {\n                        _this.clickElement.next(_this.chart.getElementAtEvent(e));\n                    }\n                });\n            };\n        });\n    };\n    ChartComponent.decorators = [\n        { type: core_1.Component, args: [{\n                    selector: 'chart',\n                    template: '',\n                    styles: [':host { display: block; }']\n                },] },\n    ];\n    ChartComponent.ctorParameters = function () { return [\n        { type: core_1.ElementRef, },\n        { type: core_1.NgZone, },\n    ]; };\n    ChartComponent.propDecorators = {\n        'type': [{ type: core_1.Input },],\n        'data': [{ type: core_1.Input },],\n        'options': [{ type: core_1.Input },],\n        'clickCanvas': [{ type: core_1.Output },],\n        'clickDataset': [{ type: core_1.Output },],\n        'clickElements': [{ type: core_1.Output },],\n        'clickElement': [{ type: core_1.Output },],\n    };\n    return ChartComponent;\n}());\nexports.ChartComponent = ChartComponent;\n//# sourceMappingURL=chart.component.js.map"]},"metadata":{},"sourceType":"script"}